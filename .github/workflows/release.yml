name: Build & Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: cuttingToolsUi
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 拉代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      # 安装 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # 装依赖
      - name: Install dependencies
        run: pnpm install

      # 构建
      - name: Build project
        run: pnpm build

      # 上传构建产物（用于 GitHub Pages）
      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      # 构建 Docker 镜像
      - name: Build Docker image
        run: |
          docker build \
            --build-arg NODE_ENV=production \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            .

      # 登录到 GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 推送镜像
      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 给 main 分支的镜像额外打一个 latest
      - name: Tag latest
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest

  # GitHub Pages 部署
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
